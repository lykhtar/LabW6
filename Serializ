public class Ser implements Serializable {

    private String namet;
    private String numst;
    private String classroom;
    private String nameles;
    private String day;
    private String numles;

    public Ser(String namet, String numst, String classroom, String nameles, String day, String numles) {
        this.namet = namet;
        this.numst = numst;
        this.classroom = classroom;
        this.day = day;
        this.nameles = nameles;
        this.numles = numles;
    }

    public String toString() {
        return "namet = " + namet + ", numst = " + numst + ", classroom = " + classroom + ", nameles = " + nameles + ", day = " + day + ", numles = " + numles;

    }
}

//класс для сериализации и десериализации
public class Serializator {
// сериализация
    boolean serialization(Ser s, String fileName) {
        boolean flag = false;
        File f = new File("E:\\КПО\\Lab6\\file.txt");
        ObjectOutputStream ostream = null;
        try {
            FileOutputStream fos = new FileOutputStream(f);
            if (fos != null) {
                ostream = new ObjectOutputStream(fos);
                ostream.writeObject(s); 
                flag = true;
            }
        } catch (FileNotFoundException e) {
            System.err.println("Файл не может быть создан: " + e);
        } catch (NotSerializableException e) {
            System.err.println("Класс не поддерживает сериализацию: " + e);
        } catch (IOException e) {
            System.err.println(e);
        } finally {
            try {
                if (ostream != null) {
                    ostream.close();
                }
            } catch (IOException e) {
                System.err.println("ошибка закрытия потока");
            }
        }
        return flag;
    }
// десериализация
    public Ser deserialization(String fileName) throws InvalidObjectException {
        File fr = new File("E:\\КПО\\Lab6\\file.txt");
        ObjectInputStream istream = null;
        try {
            FileInputStream fis = new FileInputStream(fr);
            istream = new ObjectInputStream(fis);
            Ser st = (Ser) istream.readObject();
            return st;
        } catch (ClassNotFoundException ce) {
            System.err.println("Класс не существует: " + ce);
        } catch (FileNotFoundException e) {
            System.err.println("Файл для десериализации не существует: " + e);
        } catch (InvalidClassException ioe) {
            System.err.println("Несовпадение версий классов: " + ioe);
        } catch (IOException ioe) {
            System.err.println("Общая I/O ошибка: " + ioe);
        } finally {
            try {
                if (istream != null) {
                    istream.close();
                }
            } catch (IOException e) {
                System.err.println("ошибка закрытия потока ");
            }
        }
        throw new InvalidObjectException("объект не восстановлен");
    }
}
//главный класс запускающий сериализацию и десериализацию
public class RunnerSerialization {

    public static void main(String[] args) {
// создание и запись объекта
        Ser ob = new Ser("Ivanov", "12", "223", "Math", "Thursday", "2");
        System.out.println(ob);
        String file = "E:\\КПО\\Lab6\\file.txt";
        Serializator sz = new Serializator();
        boolean b = sz.serialization(ob, file);
// чтение и вывод объекта
        Ser res = null;
        try {
            res = sz.deserialization(file);
        } catch (InvalidObjectException e) { // обработка
            e.printStackTrace();
        }
        System.out.println(res);
    }
}

